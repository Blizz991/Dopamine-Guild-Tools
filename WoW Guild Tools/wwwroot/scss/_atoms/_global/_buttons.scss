/// <reference path="../../_base/_variables.scss" />
@mixin button-colors($_text: $bodyTextColor, $_bg: $primaryColor, $borders: true) {
  background: $_bg;
  color: $_text;

  @if $borders {
    border-color: $_text;
    background: transparent;
  } @else {
    border: 1px solid transparent;
  }

  &:hover {
    background: $_text;
    color: $_bg;

    @if $borders == false {
      border: 1px solid $_bg;
    }
  }
}

.button,
[type="submit"],
[type="reset"],
[type="button"]:not(.trigger) {
  @include text-button;
  text-align: center;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 16px 20px;
  outline: none;
  cursor: pointer;
  white-space: nowrap;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  border-radius: 8px;
  transition: background-color 150ms, color 150ms;
  text-decoration: underline;
  position: relative;
  border: 1px solid transparent;
  height: 48px;

  @include button-colors();

  &[disabled], .disabled {
    color: $white !important;
    border-color: $white !important;
    /*background-color: $gray-800 !important;*/
    opacity: .4;
    cursor: not-allowed;
  }

  &.button--icon {
    padding-right: 48px;

    &:before {
      @include material-icons();
      content: "arrow_forward";
      position: absolute;
      top: 50%;
      right: 16px;
      transform: translateY(-50%);
    }
  }

  &.icon-button {
    border-radius: 50%;
    padding: 8px;
    width: 48px;

    &:before {
      @include material-icons();
      content: "arrow_forward";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &.button--inverse {
    @include button-colors($primaryColor, $bodyTextColor, true);
    box-shadow: none;
  }
}
