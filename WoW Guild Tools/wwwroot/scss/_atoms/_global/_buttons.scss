/// <reference path="../../_base/_variables.scss" />
@mixin button-colors($_text: $lightColor, $_bg: $primaryColor, $hoverBg: $primaryHoverColor, $_hoverText: $white, $borders: false) {
  background: $_bg;
  color: $_text;

  @if $borders {
    border-color: $_text;
    background: transparent;
  }
  @else {
    border: 1px solid transparent;
  }

  &:hover {
    background: $hoverBg;
    color: $_hoverText;

    @if $borders == false {
      border: 1px solid $_bg;
    }
  }
}

.button,
[type="submit"],
[type="reset"],
[type="button"]:not(.trigger, .collapsible__trigger, .xdsoft_prev, .xdsoft_today_button, .xdsoft_next) {
  @include text-button;
  text-align: center;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 8px 12px;
  outline: none;
  cursor: pointer;
  white-space: nowrap;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  border-radius: 4px;
  transition: background-color 150ms, color 150ms;
  text-decoration: none;
  position: relative;
  border: 1px solid transparent;
  height: 32px;

  @include button-colors();

  &[disabled], .disabled {
    color: $white !important;
    border-color: $white !important;
    /*background-color: $gray-800 !important;*/
    opacity: .4;
    cursor: not-allowed;
  }

  &.icon-button {
    /*border-radius: 50%;*/
    padding: 8px;
    width: 32px;
    /// Must have content to work (content being: 'content: "name_of_icon")
    &:before {
      @include material-icons();
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &.button {
    &--icon {
      padding-right: 40px;
      /// Must have content to work (content being: 'content: "name_of_icon")
      &:before {
        @include material-icons();
        font-size: 22px;
        /*content: "arrow_forward";*/
        position: absolute;
        top: 50%;
        right: 12px;
        transform: translateY(-50%);
      }
    }

    &--secondary {
      @include button-colors($lightColor, $secondaryColor, $secondaryHoverColor);
    }

    &--success {
      @include button-colors($lightColor, $successColor, $successHoverColor);
    }

    &--info {
      @include button-colors($lightColor, $infoColor, $infoHoverColor);
    }

    &--warning {
      @include button-colors($lightColor, $warningColor, $warningHoverColor);
    }

    &--danger {
      @include button-colors($lightColor, $dangerColor, $dangerHoverColor);
    }

    &--light {
      @include button-colors($darkColor, $lightColor, $lightHoverColor, $darkHoverColor);
    }

    &--dark {
      @include button-colors($lightColor, $darkColor, $darkHoverColor);
    }
  }
}
