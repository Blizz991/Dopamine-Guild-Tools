// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoW_Guild_Tools.Data;

namespace WoW_Guild_Tools.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210510170526_WowData")]
    partial class WowData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.Profession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RaiderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RaiderId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.Raider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassWowClassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAlt")
                        .HasColumnType("bit");

                    b.Property<int?>("MainId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int?>("RaceWowRaceId")
                        .HasColumnType("int");

                    b.Property<int?>("RankRaiderRankId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleWowRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassWowClassId");

                    b.HasIndex("MainId");

                    b.HasIndex("RaceWowRaceId");

                    b.HasIndex("RankRaiderRankId");

                    b.HasIndex("RoleWowRoleId");

                    b.HasIndex("SpecId");

                    b.ToTable("Raiders");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.RaiderRank", b =>
                {
                    b.Property<int>("RaiderRankId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RaiderRankName")
                        .HasColumnType("int");

                    b.HasKey("RaiderRankId");

                    b.ToTable("RaiderRank");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowClass", b =>
                {
                    b.Property<int>("WowClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WowClassId");

                    b.ToTable("WowClasses");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowFaction", b =>
                {
                    b.Property<int>("WowFactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WowFactionId");

                    b.ToTable("WowFaction");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowRace", b =>
                {
                    b.Property<int>("WowRaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WowFactionId")
                        .HasColumnType("int");

                    b.HasKey("WowRaceId");

                    b.HasIndex("WowFactionId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowRole", b =>
                {
                    b.Property<int>("WowRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WowRoleId");

                    b.ToTable("WowRole");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowSpec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WowSpecs");
                });

            modelBuilder.Entity("WowClassWowRace", b =>
                {
                    b.Property<int>("ClassesWowClassId")
                        .HasColumnType("int");

                    b.Property<int>("WowRacesWowRaceId")
                        .HasColumnType("int");

                    b.HasKey("ClassesWowClassId", "WowRacesWowRaceId");

                    b.HasIndex("WowRacesWowRaceId");

                    b.ToTable("WowClassWowRace");
                });

            modelBuilder.Entity("WowClassWowSpec", b =>
                {
                    b.Property<int>("WowClassesWowClassId")
                        .HasColumnType("int");

                    b.Property<int>("WowSpecsId")
                        .HasColumnType("int");

                    b.HasKey("WowClassesWowClassId", "WowSpecsId");

                    b.HasIndex("WowSpecsId");

                    b.ToTable("WowClassWowSpec");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.Profession", b =>
                {
                    b.HasOne("WoW_Guild_Tools.Models.Raider", null)
                        .WithMany("Professions")
                        .HasForeignKey("RaiderId");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.Raider", b =>
                {
                    b.HasOne("WoW_Guild_Tools.Models.WowClass", "Class")
                        .WithMany()
                        .HasForeignKey("ClassWowClassId");

                    b.HasOne("WoW_Guild_Tools.Models.Raider", "Main")
                        .WithMany()
                        .HasForeignKey("MainId");

                    b.HasOne("WoW_Guild_Tools.Models.WowRace", "Race")
                        .WithMany()
                        .HasForeignKey("RaceWowRaceId");

                    b.HasOne("WoW_Guild_Tools.Models.RaiderRank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankRaiderRankId");

                    b.HasOne("WoW_Guild_Tools.Models.WowRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleWowRoleId");

                    b.HasOne("WoW_Guild_Tools.Models.WowSpec", "Spec")
                        .WithMany()
                        .HasForeignKey("SpecId");

                    b.Navigation("Class");

                    b.Navigation("Main");

                    b.Navigation("Race");

                    b.Navigation("Rank");

                    b.Navigation("Role");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowRace", b =>
                {
                    b.HasOne("WoW_Guild_Tools.Models.WowFaction", "WowFaction")
                        .WithMany("Races")
                        .HasForeignKey("WowFactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WowFaction");
                });

            modelBuilder.Entity("WowClassWowRace", b =>
                {
                    b.HasOne("WoW_Guild_Tools.Models.WowClass", null)
                        .WithMany()
                        .HasForeignKey("ClassesWowClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WoW_Guild_Tools.Models.WowRace", null)
                        .WithMany()
                        .HasForeignKey("WowRacesWowRaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WowClassWowSpec", b =>
                {
                    b.HasOne("WoW_Guild_Tools.Models.WowClass", null)
                        .WithMany()
                        .HasForeignKey("WowClassesWowClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WoW_Guild_Tools.Models.WowSpec", null)
                        .WithMany()
                        .HasForeignKey("WowSpecsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.Raider", b =>
                {
                    b.Navigation("Professions");
                });

            modelBuilder.Entity("WoW_Guild_Tools.Models.WowFaction", b =>
                {
                    b.Navigation("Races");
                });
#pragma warning restore 612, 618
        }
    }
}
